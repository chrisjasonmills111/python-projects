name: Python CI/CD

on:
  push:
    branches:
      - main

jobs:
  code-rating:
    name: Code Rating
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

    - name: Install Dependencies
      run: pip install flake8

    - name: Run Flake8
      run: |
        if ! flake8; then
          echo "::error::Flake8 found some style issues. Please fix them before proceeding."
          exit 1
        fi

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    needs: code-rating

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python and Pip
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        pip: '23.2.1'

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Update pip
      run: |
        pip install --upgrade pip || {
          echo "::error::Failed to update pip. Please check the pip installation."
          exit 1
        }

    - name: Install Dependencies
      run: |
        pip install -r requirements.txt || {
          echo "::error::Failed to install dependencies. Please check the requirements.txt file."
          exit 1
        }

    - name: Run Unit Tests
      run: |
        pytest tests/ || {
          echo "::error::Unit tests failed. Please fix the test failures before proceeding."
          exit 1
        }

    - name: Generate Coverage Report
      run: |
        pytest --cov-report xml --cov=my_app tests/ || {
          echo "::error::Failed to generate coverage report. Please check the pytest configuration."
          exit 1
        }

    - name: Upload Coverage Report
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  deployment:
    name: Deploy to Server
    runs-on: ubuntu-latest

    needs: tests

    steps:
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /path/to/your/app
          git pull origin main
          # Additional deployment steps here, such as restarting the server

